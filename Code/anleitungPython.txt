Anleitung für die Entwicklung für den RPi auf dem Pc

!Ändere nicht, was vor if __name__=="__main__": steht!

Um auf dem PC den Code zu testen, muss man eine Bibliothek herunterladen.
Die Bibliothek heißt fake-rpigpio. Diese installiert man entweder über pip install fake-rpigpio oder unter PyCharm:
View -> Tool Windows -> Python Packages. In die Suchleiste gibt man dort "fake-rpigpio" ein und installiert.
Wirklich nur die Bibliothek die genau so heißt!

 Wenn eine Fehlermeldung erscheint, kann es sein, dass pip nicht installiert ist, unter Linux kann man dann pip über den
 Befehl: "sudo apt install pip3" installieren.

 Wichtig zum Benutzen des Codes ist, dass Python3 installiert ist, unter Linux lautet der Befehl dazu: "sudo apt isntall python3".

Befehle in Python zur Nutzung der GPIO Pins:

Alle Befehle starten mit GPIO, danach folgt fast immer ein Punkt und dann die Funktion, die man nutzen möchte.

Beispielsweise:

GPIO.setup(PIN, MODE)   stelt ein, ob ich einen Pin als Input oder Output nutzen möchte. Pin ist hierbei der Pin auf dem Raspberry.
GPIO.input(PIN)         fragt den angegebenen PIN ab; die Ausgabe ist ein Bool.
GPIO.output(PIN, ZUstand) Der angegebene Pin wird je nach Eingabe auf HIGH oder LOW gestellt, dies wird über Bools gemacht: TRUE = HIGH und FALSE = LOW.
GPIO.cleanup() Gibt alle benutzen Pins wieder frei

Bei Fragen einfach Anschreiben :)

Die Belegung der Pins findet ihr hier https://www.elektronik-kompendium.de/sites/raspberry-pi/1907101.htm

